basePath: /
definitions:
  entities.GetAllUsers:
    properties:
      meta:
        $ref: '#/definitions/entities.Meta'
      users:
        items:
          $ref: '#/definitions/entities.Users'
        type: array
    type: object
  entities.Meta:
    properties:
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  entities.Task:
    properties:
      description:
        type: string
      end_time:
        type: string
      start_time:
        type: string
      task:
        type: string
      timer:
        type: boolean
      user_id:
        type: integer
    type: object
  entities.UserStats:
    properties:
      address:
        type: string
      name:
        type: string
      overall_time:
        type: string
      passport_number:
        type: string
      passport_series:
        type: string
      patronymic:
        type: string
      surname:
        type: string
      tasks:
        items:
          $ref: '#/definitions/entities.Task'
        type: array
    type: object
  entities.Users:
    properties:
      address:
        type: string
      name:
        type: string
      passport_number:
        type: string
      passport_series:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
  handler.errorResponse:
    properties:
      message:
        type: string
    type: object
  handler.statusResponse:
    properties:
      status:
        type: string
    type: object
host: 127.0.10.5:8080
info:
  contact: {}
  description: API Server for Go Service
  title: Time Tracker API
  version: "1.0"
paths:
  /api/tasks/{task_id}/start:
    post:
      consumes:
      - application/json
      description: Start task
      operationId: start-task
      parameters:
      - description: task_id
        in: path
        name: task_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Start task
      tags:
      - Tasks
  /api/tasks/{task_id}/stop:
    post:
      consumes:
      - application/json
      description: Stop task
      operationId: stop-task
      parameters:
      - description: task_id
        in: path
        name: task_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Stop task
      tags:
      - Tasks
  /api/tasks/{user_id}:
    post:
      consumes:
      - application/json
      description: Create task
      operationId: create-task
      parameters:
      - description: task info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entities.Task'
      - description: user_id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Create task
      tags:
      - Tasks
  /api/users/:
    get:
      consumes:
      - application/json
      description: Get all users
      operationId: get-users
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.GetAllUsers'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Get all users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create user
      operationId: create-user
      parameters:
      - description: users info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entities.Users'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Users'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Create user
      tags:
      - Users
  /api/users/{user_id}:
    delete:
      consumes:
      - application/json
      description: Delete user
      operationId: delete-user
      parameters:
      - description: user_id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Delete user
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Get single user
      operationId: get-user
      parameters:
      - description: user_id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Users'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Get user
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update user
      operationId: update-user
      parameters:
      - description: goods info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entities.Users'
      - description: user_id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Users'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Update user
      tags:
      - Users
  /api/users/{user_id}/stats:
    get:
      consumes:
      - application/json
      description: Get user stats with overall time and tasks
      operationId: get-stats-user
      parameters:
      - description: stats info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entities.UserStats'
      - description: user_id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Get user stats
      tags:
      - Users
swagger: "2.0"
